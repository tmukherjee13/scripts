#!/bin/bash

INSTALL=false
VERSION="5"
BASEDIR="/opt/php"
install_version="installv5"
PREFIX=""
TARGET=""
PHP7FILE="php-7.0.4.tar.bz2"
PHP5FILE="php-5.6.19.tar.bz2"
URL="http://in1.php.net/distributions/"

download()
{
    local url=$1
    echo "Downloading php version $VERSION..." 
    wget --report-speed=bits --progress=bar:force $url 2>&1 | progressfilt 
}

progressfilt ()
{
    local flag=false c count cr=$'\r' nl=$'\n'
    while IFS='' read -d '' -rn 1 c
    do
        if $flag
        then
            printf '%c' "$c"
        else
            if [[ $c != $cr && $c != $nl ]]
            then
                count=0
            else
                ((count++))
                if ((count > 1))
                then
                    flag=true
                fi
            fi
        fi
    done
}

extract()
{
	local options=$1
	local file=$2
	echo "Extracting..." 
	tar $options $file
}

install_dependencies(){
	echo "Installing Dependencies..."
	sudo apt-get update -y
	sudo apt-get install -f autoconf bison libxml2-dev apache2-dev systemtap-sdt-dev openssl pkg-config libssl-dev libcurl4-openssl-dev \
	 libbz2-dev libgdbm-dev libjpeg62 libjpeg62-dev libpng12-0 libpng12-dev libfreetype6-dev libicu-dev libiodbc2-dev libxslt1-dev libiodbc2 \
	 libc-client-dev
}

installv7(){

	echo "Configuring PHP version $VERSION..."

	sudo ./configure \
	--prefix=/opt/php/php7 \
	--with-config-file-path=/opt/php/php7 \
	--with-config-file-scan-dir=/opt/php/php7/lib/conf.d \
	--with-pdo-pgsql \
	--with-pdo-mysql \
	--with-zlib-dir \
	--with-freetype-dir \
	--enable-mbstring \
	--with-libxml-dir=/usr \
	--enable-soap \
	--enable-calendar \
	--with-curl \
	--with-mcrypt \
	--with-zlib \
	--with-gd \
	--with-pgsql \
	--disable-rpath \
	--enable-inline-optimization \
	--with-bz2 \
	--with-zlib \
	--enable-sockets \
	--enable-sysvsem \
	--enable-sysvshm \
	--enable-pcntl \
	--enable-mbregex \
	--with-mhash \
	--enable-zip \
	--with-pcre-regex \
	--with-mysql-sock=/var/run/mysqld/mysqld.sock \
	--with-mysqli=mysqlnd \
	--with-pgsql=shared,/usr \
	--with-png-dir=/usr \
	--enable-gd-native-ttf \
	--with-openssl \
	--with-fpm-user=nginx \
	--with-fpm-group=nginx \
	--with-libdir=lib \
	--enable-ftp \
	--with-imap \
	--with-imap-ssl \
	--with-kerberos \
	--with-gettext \
	--with-gd \
	--with-jpeg-dir=/usr/lib/ \
	--enable-fpm
}

installv5(){

	echo "Configuring PHP version $VERSION..."
	sudo ./configure \
	--prefix=/opt/php/php5 \
	--with-config-file-path=/opt/php/php5 \
	--with-config-file-scan-dir=/opt/php/php5/lib/conf.d \
	--with-pdo-pgsql \
	--with-pdo-mysql \
	--with-zlib-dir \
	--with-freetype-dir \
	--enable-mbstring \
	--with-libxml-dir=/usr \
	--enable-soap \
	--enable-calendar \
	--with-curl \
	--with-mcrypt \
	--with-zlib \
	--with-gd \
	--with-pgsql \
	--disable-rpath \
	--enable-inline-optimization \
	--with-bz2 \
	--with-zlib \
	--enable-sockets \
	--enable-sysvsem \
	--enable-sysvshm \
	--enable-pcntl \
	--enable-mbregex \
	--with-mhash \
	--enable-zip \
	--with-pcre-regex \
	--with-mysql \
	--with-mysqli \
	--with-pgsql=shared,/usr \
	--with-png-dir=/usr \
	--enable-gd-native-ttf \
	--with-openssl \
	--with-fpm-user=nginx \
	--with-fpm-group=nginx \
	--with-libdir=lib \
	--enable-ftp \
	--with-imap \
	--with-imap-ssl \
	--with-kerberos \
	--with-gettext \
	--with-gd \
	--with-jpeg-dir=/usr/lib/ \
	--enable-fpm
}

_install(){
	echo "Installing php..." 
	cd $PREFIX
	$install_version
	sudo make && make install
	echo "Cleaning files..."
	make clean
	echo "Installation complete."
}


while getopts "iv:" opt; do
  case $opt in
    i)
      INSTALL=true
      ;;
    v)
      VERSION=$OPTARG
      ;;
    \?)
      echo "Invalid option: -$OPTARG" >&2
      exit 1
      ;;
    :)
      echo "Option -$OPTARG requires an argument." >&2
      exit 1
      ;;
  esac
done
shift "$((OPTIND-1))"
if [[ -n $VERSION && $VERSION -eq '5' ]]; then
	download $URL$PHP5FILE
	TARGET=$PHP5FILE
	PREFIX="php-5.6.19"
	install_version="installv5"
elif [[ -n $VERSION && $VERSION -eq '7' ]]; then
	download $URL$PHP7FILE
	TARGET=$PHP7FILE
	PREFIX="php-7.0.4"
	install_version="installv7"
else
	echo "Invalid version string. Exiting..."
fi


if $INSTALL; then
	install_dependencies
	extract -xjf $TARGET
	_install
fi
exit 0
